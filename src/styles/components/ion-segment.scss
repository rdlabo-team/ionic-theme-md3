@use '../utils/api';

ion-segment.ios:not(.ios26-disabled) {
  @include api.glass-background;
  min-height: 48px;
  border-radius: 25px;

  &.segment-expand {
    min-height: 24px;
    width: calc(100% - var(--ion-safe-area-left, 0) - var(--ion-safe-area-left, 0) - 24px);

    &.segment-activated {
      transform: scale(1);
    }

    ion-segment-button {
      min-height: 24px;
    }
  }

  transition: transform var(--ios26-activated-transition-duration) ease-out;
  will-change: transform;

  &.in-toolbar-color:not(.in-segment-color) {
    ion-segment-button:not(.segment-button-checked)::part(native) {
      color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 1) !important;
    }
  }

  &:not(.ios26-enable-gesture).segment-activated {
    transform: scale(1.1);
    ion-segment-button {
      transition: transform 100ms ease-out;
      &.segment-button-checked::part(native) {
        transform: scale(1.08);
      }
      &::part(indicator-background) {
        position: relative;
        z-index: 1;
        background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0);
        transform: scale(1.1);
        transform-origin: center center;
      }
    }
  }

  &.ios26-enable-gesture {
    &:has(ion-segment-button.ion-activated) {
      transform: scale(1.1);
      ion-segment-button {
        transition: transform 100ms ease-out;
        &.segment-button-checked::part(native) {
          transform: scale(1.08);
        }
        &::part(indicator-background) {
          position: relative;
          z-index: 1;
          transform: scale(1.1);
          transform-origin: center center;
        }
      }
    }
    &.ios26-animated {
      ion-segment-button {
        &::part(indicator-background) {
          background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0);
        }
      }
    }
  }
}

ion-segment-button.ios:not(.ios26-disabled) {
  --border-width: 0;
  --ion-color-base: var(--ion-text-color, #000);
  --padding-start: 8px;
  --padding-end: 8px;
  min-width: 60px;
  margin: 3px 2px;
  font-size: 14.5px;

  &::part(indicator-background) {
    border-radius: 25px;
    box-shadow: none;
    transition: background 0.2s ease;
    background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.06);
  }

  &.ion-cloned-element {
    &::part(native) {
      border-radius: 25px;
      @include api.glass-background(1, 0, 104%);
      background: transparent;
      height: 100%;
    }
    color: var(--color-selected, var(--ion-color-primary, #0054e9));
    pointer-events: none;
    position: absolute;
    left: 0;
    top: -2.5px;
    transform-origin: center;
    & > * {
      visibility: hidden;
    }
  }
}
